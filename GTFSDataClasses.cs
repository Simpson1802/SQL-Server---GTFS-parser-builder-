#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SQL_Server_GTFS_builder_parser
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GTFS Database")]
	public partial class GTFSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAgency(Agency instance);
    partial void UpdateAgency(Agency instance);
    partial void DeleteAgency(Agency instance);
    partial void InsertCalendar(Calendar instance);
    partial void UpdateCalendar(Calendar instance);
    partial void DeleteCalendar(Calendar instance);
    partial void InsertRoute(Route instance);
    partial void UpdateRoute(Route instance);
    partial void DeleteRoute(Route instance);
    partial void InsertStop_time(Stop_time instance);
    partial void UpdateStop_time(Stop_time instance);
    partial void DeleteStop_time(Stop_time instance);
    partial void InsertStop(Stop instance);
    partial void UpdateStop(Stop instance);
    partial void DeleteStop(Stop instance);
    partial void InsertTrip(Trip instance);
    partial void UpdateTrip(Trip instance);
    partial void DeleteTrip(Trip instance);
    #endregion
		
		public GTFSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GTFSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Agency> Agencies
		{
			get
			{
				return this.GetTable<Agency>();
			}
		}
		
		public System.Data.Linq.Table<Calendar> Calendars
		{
			get
			{
				return this.GetTable<Calendar>();
			}
		}
		
		public System.Data.Linq.Table<Route> Routes
		{
			get
			{
				return this.GetTable<Route>();
			}
		}
		
		public System.Data.Linq.Table<Stop_time> Stop_times
		{
			get
			{
				return this.GetTable<Stop_time>();
			}
		}
		
		public System.Data.Linq.Table<Stop> Stops
		{
			get
			{
				return this.GetTable<Stop>();
			}
		}
		
		public System.Data.Linq.Table<Trip> Trips
		{
			get
			{
				return this.GetTable<Trip>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="agency")]
	public partial class Agency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Agency_id;
		
		private string _Agency_name;
		
		private string _Agency_url;
		
		private string _Agency_timezone;
		
		private string _Agency_lang;
		
		private string _Agency_phone;
		
		private string _Agency_fare_url;
		
		private EntitySet<Route> _Routes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgency_idChanging(string value);
    partial void OnAgency_idChanged();
    partial void OnAgency_nameChanging(string value);
    partial void OnAgency_nameChanged();
    partial void OnAgency_urlChanging(string value);
    partial void OnAgency_urlChanged();
    partial void OnAgency_timezoneChanging(string value);
    partial void OnAgency_timezoneChanged();
    partial void OnAgency_langChanging(string value);
    partial void OnAgency_langChanged();
    partial void OnAgency_phoneChanging(string value);
    partial void OnAgency_phoneChanged();
    partial void OnAgency_fare_urlChanging(string value);
    partial void OnAgency_fare_urlChanged();
    #endregion
		
		public Agency()
		{
			this._Routes = new EntitySet<Route>(new Action<Route>(this.attach_Routes), new Action<Route>(this.detach_Routes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="agency_id", Storage="_Agency_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Agency_id
		{
			get
			{
				return this._Agency_id;
			}
			set
			{
				if ((this._Agency_id != value))
				{
					this.OnAgency_idChanging(value);
					this.SendPropertyChanging();
					this._Agency_id = value;
					this.SendPropertyChanged("Agency_id");
					this.OnAgency_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="agency_name", Storage="_Agency_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Agency_name
		{
			get
			{
				return this._Agency_name;
			}
			set
			{
				if ((this._Agency_name != value))
				{
					this.OnAgency_nameChanging(value);
					this.SendPropertyChanging();
					this._Agency_name = value;
					this.SendPropertyChanged("Agency_name");
					this.OnAgency_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="agency_url", Storage="_Agency_url", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Agency_url
		{
			get
			{
				return this._Agency_url;
			}
			set
			{
				if ((this._Agency_url != value))
				{
					this.OnAgency_urlChanging(value);
					this.SendPropertyChanging();
					this._Agency_url = value;
					this.SendPropertyChanged("Agency_url");
					this.OnAgency_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="agency_timezone", Storage="_Agency_timezone", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Agency_timezone
		{
			get
			{
				return this._Agency_timezone;
			}
			set
			{
				if ((this._Agency_timezone != value))
				{
					this.OnAgency_timezoneChanging(value);
					this.SendPropertyChanging();
					this._Agency_timezone = value;
					this.SendPropertyChanged("Agency_timezone");
					this.OnAgency_timezoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="agency_lang", Storage="_Agency_lang", DbType="NVarChar(100)")]
		public string Agency_lang
		{
			get
			{
				return this._Agency_lang;
			}
			set
			{
				if ((this._Agency_lang != value))
				{
					this.OnAgency_langChanging(value);
					this.SendPropertyChanging();
					this._Agency_lang = value;
					this.SendPropertyChanged("Agency_lang");
					this.OnAgency_langChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="agency_phone", Storage="_Agency_phone", DbType="NVarChar(100)")]
		public string Agency_phone
		{
			get
			{
				return this._Agency_phone;
			}
			set
			{
				if ((this._Agency_phone != value))
				{
					this.OnAgency_phoneChanging(value);
					this.SendPropertyChanging();
					this._Agency_phone = value;
					this.SendPropertyChanged("Agency_phone");
					this.OnAgency_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="agency_fare_url", Storage="_Agency_fare_url", DbType="NVarChar(100)")]
		public string Agency_fare_url
		{
			get
			{
				return this._Agency_fare_url;
			}
			set
			{
				if ((this._Agency_fare_url != value))
				{
					this.OnAgency_fare_urlChanging(value);
					this.SendPropertyChanging();
					this._Agency_fare_url = value;
					this.SendPropertyChanged("Agency_fare_url");
					this.OnAgency_fare_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="agency_pk", Storage="_Routes", ThisKey="Agency_id", OtherKey="Agency_id", DeleteRule="NO ACTION")]
		public EntitySet<Route> Routes
		{
			get
			{
				return this._Routes;
			}
			set
			{
				this._Routes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Routes(Route entity)
		{
			this.SendPropertyChanging();
			entity.Agency = this;
		}
		
		private void detach_Routes(Route entity)
		{
			this.SendPropertyChanging();
			entity.Agency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar")]
	public partial class Calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Service_id;
		
		private bool _Monday;
		
		private bool _Tuesday;
		
		private bool _Wednesday;
		
		private bool _Thursday;
		
		private bool _Friday;
		
		private bool _Saturday;
		
		private bool _Sunday;
		
		private System.DateTime _Start_date;
		
		private System.DateTime _End_date;
		
		private EntitySet<Trip> _Trips;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnService_idChanging(string value);
    partial void OnService_idChanged();
    partial void OnMondayChanging(bool value);
    partial void OnMondayChanged();
    partial void OnTuesdayChanging(bool value);
    partial void OnTuesdayChanged();
    partial void OnWednesdayChanging(bool value);
    partial void OnWednesdayChanged();
    partial void OnThursdayChanging(bool value);
    partial void OnThursdayChanged();
    partial void OnFridayChanging(bool value);
    partial void OnFridayChanged();
    partial void OnSaturdayChanging(bool value);
    partial void OnSaturdayChanged();
    partial void OnSundayChanging(bool value);
    partial void OnSundayChanged();
    partial void OnStart_dateChanging(System.DateTime value);
    partial void OnStart_dateChanged();
    partial void OnEnd_dateChanging(System.DateTime value);
    partial void OnEnd_dateChanged();
    #endregion
		
		public Calendar()
		{
			this._Trips = new EntitySet<Trip>(new Action<Trip>(this.attach_Trips), new Action<Trip>(this.detach_Trips));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="service_id", Storage="_Service_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Service_id
		{
			get
			{
				return this._Service_id;
			}
			set
			{
				if ((this._Service_id != value))
				{
					this.OnService_idChanging(value);
					this.SendPropertyChanging();
					this._Service_id = value;
					this.SendPropertyChanged("Service_id");
					this.OnService_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="monday", Storage="_Monday", DbType="Bit NOT NULL")]
		public bool Monday
		{
			get
			{
				return this._Monday;
			}
			set
			{
				if ((this._Monday != value))
				{
					this.OnMondayChanging(value);
					this.SendPropertyChanging();
					this._Monday = value;
					this.SendPropertyChanged("Monday");
					this.OnMondayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tuesday", Storage="_Tuesday", DbType="Bit NOT NULL")]
		public bool Tuesday
		{
			get
			{
				return this._Tuesday;
			}
			set
			{
				if ((this._Tuesday != value))
				{
					this.OnTuesdayChanging(value);
					this.SendPropertyChanging();
					this._Tuesday = value;
					this.SendPropertyChanged("Tuesday");
					this.OnTuesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="wednesday", Storage="_Wednesday", DbType="Bit NOT NULL")]
		public bool Wednesday
		{
			get
			{
				return this._Wednesday;
			}
			set
			{
				if ((this._Wednesday != value))
				{
					this.OnWednesdayChanging(value);
					this.SendPropertyChanging();
					this._Wednesday = value;
					this.SendPropertyChanged("Wednesday");
					this.OnWednesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="thursday", Storage="_Thursday", DbType="Bit NOT NULL")]
		public bool Thursday
		{
			get
			{
				return this._Thursday;
			}
			set
			{
				if ((this._Thursday != value))
				{
					this.OnThursdayChanging(value);
					this.SendPropertyChanging();
					this._Thursday = value;
					this.SendPropertyChanged("Thursday");
					this.OnThursdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="friday", Storage="_Friday", DbType="Bit NOT NULL")]
		public bool Friday
		{
			get
			{
				return this._Friday;
			}
			set
			{
				if ((this._Friday != value))
				{
					this.OnFridayChanging(value);
					this.SendPropertyChanging();
					this._Friday = value;
					this.SendPropertyChanged("Friday");
					this.OnFridayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="saturday", Storage="_Saturday", DbType="Bit NOT NULL")]
		public bool Saturday
		{
			get
			{
				return this._Saturday;
			}
			set
			{
				if ((this._Saturday != value))
				{
					this.OnSaturdayChanging(value);
					this.SendPropertyChanging();
					this._Saturday = value;
					this.SendPropertyChanged("Saturday");
					this.OnSaturdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="sunday", Storage="_Sunday", DbType="Bit NOT NULL")]
		public bool Sunday
		{
			get
			{
				return this._Sunday;
			}
			set
			{
				if ((this._Sunday != value))
				{
					this.OnSundayChanging(value);
					this.SendPropertyChanging();
					this._Sunday = value;
					this.SendPropertyChanged("Sunday");
					this.OnSundayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="start_date", Storage="_Start_date", DbType="DateTime NOT NULL")]
		public System.DateTime Start_date
		{
			get
			{
				return this._Start_date;
			}
			set
			{
				if ((this._Start_date != value))
				{
					this.OnStart_dateChanging(value);
					this.SendPropertyChanging();
					this._Start_date = value;
					this.SendPropertyChanged("Start_date");
					this.OnStart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="end_date", Storage="_End_date", DbType="DateTime NOT NULL")]
		public System.DateTime End_date
		{
			get
			{
				return this._End_date;
			}
			set
			{
				if ((this._End_date != value))
				{
					this.OnEnd_dateChanging(value);
					this.SendPropertyChanging();
					this._End_date = value;
					this.SendPropertyChanged("End_date");
					this.OnEnd_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_id_pk", Storage="_Trips", ThisKey="Service_id", OtherKey="Service_id", DeleteRule="NO ACTION")]
		public EntitySet<Trip> Trips
		{
			get
			{
				return this._Trips;
			}
			set
			{
				this._Trips.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trips(Trip entity)
		{
			this.SendPropertyChanging();
			entity.Calendar = this;
		}
		
		private void detach_Trips(Trip entity)
		{
			this.SendPropertyChanging();
			entity.Calendar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="routes")]
	public partial class Route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Route_id;
		
		private string _Agency_id;
		
		private string _Route_short_name;
		
		private string _Route_long_name;
		
		private string _Route_desc;
		
		private int _Route_type;
		
		private string _Route_url;
		
		private string _Route_color;
		
		private string _Route_text_color;
		
		private EntityRef<Agency> _Agency;
		
		private EntitySet<Trip> _Trips;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoute_idChanging(string value);
    partial void OnRoute_idChanged();
    partial void OnAgency_idChanging(string value);
    partial void OnAgency_idChanged();
    partial void OnRoute_short_nameChanging(string value);
    partial void OnRoute_short_nameChanged();
    partial void OnRoute_long_nameChanging(string value);
    partial void OnRoute_long_nameChanged();
    partial void OnRoute_descChanging(string value);
    partial void OnRoute_descChanged();
    partial void OnRoute_typeChanging(int value);
    partial void OnRoute_typeChanged();
    partial void OnRoute_urlChanging(string value);
    partial void OnRoute_urlChanged();
    partial void OnRoute_colorChanging(string value);
    partial void OnRoute_colorChanged();
    partial void OnRoute_text_colorChanging(string value);
    partial void OnRoute_text_colorChanged();
    #endregion
		
		public Route()
		{
			this._Agency = default(EntityRef<Agency>);
			this._Trips = new EntitySet<Trip>(new Action<Trip>(this.attach_Trips), new Action<Trip>(this.detach_Trips));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="route_id", Storage="_Route_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Route_id
		{
			get
			{
				return this._Route_id;
			}
			set
			{
				if ((this._Route_id != value))
				{
					this.OnRoute_idChanging(value);
					this.SendPropertyChanging();
					this._Route_id = value;
					this.SendPropertyChanged("Route_id");
					this.OnRoute_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="agency_id", Storage="_Agency_id", DbType="NVarChar(100)")]
		public string Agency_id
		{
			get
			{
				return this._Agency_id;
			}
			set
			{
				if ((this._Agency_id != value))
				{
					this.OnAgency_idChanging(value);
					this.SendPropertyChanging();
					this._Agency_id = value;
					this.SendPropertyChanged("Agency_id");
					this.OnAgency_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="route_short_name", Storage="_Route_short_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Route_short_name
		{
			get
			{
				return this._Route_short_name;
			}
			set
			{
				if ((this._Route_short_name != value))
				{
					this.OnRoute_short_nameChanging(value);
					this.SendPropertyChanging();
					this._Route_short_name = value;
					this.SendPropertyChanged("Route_short_name");
					this.OnRoute_short_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="route_long_name", Storage="_Route_long_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Route_long_name
		{
			get
			{
				return this._Route_long_name;
			}
			set
			{
				if ((this._Route_long_name != value))
				{
					this.OnRoute_long_nameChanging(value);
					this.SendPropertyChanging();
					this._Route_long_name = value;
					this.SendPropertyChanged("Route_long_name");
					this.OnRoute_long_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="route_desc", Storage="_Route_desc", DbType="NVarChar(100)")]
		public string Route_desc
		{
			get
			{
				return this._Route_desc;
			}
			set
			{
				if ((this._Route_desc != value))
				{
					this.OnRoute_descChanging(value);
					this.SendPropertyChanging();
					this._Route_desc = value;
					this.SendPropertyChanged("Route_desc");
					this.OnRoute_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="route_type", Storage="_Route_type", DbType="Int NOT NULL")]
		public int Route_type
		{
			get
			{
				return this._Route_type;
			}
			set
			{
				if ((this._Route_type != value))
				{
					this.OnRoute_typeChanging(value);
					this.SendPropertyChanging();
					this._Route_type = value;
					this.SendPropertyChanged("Route_type");
					this.OnRoute_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="route_url", Storage="_Route_url", DbType="NVarChar(100)")]
		public string Route_url
		{
			get
			{
				return this._Route_url;
			}
			set
			{
				if ((this._Route_url != value))
				{
					this.OnRoute_urlChanging(value);
					this.SendPropertyChanging();
					this._Route_url = value;
					this.SendPropertyChanged("Route_url");
					this.OnRoute_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="route_color", Storage="_Route_color", DbType="NVarChar(100)")]
		public string Route_color
		{
			get
			{
				return this._Route_color;
			}
			set
			{
				if ((this._Route_color != value))
				{
					this.OnRoute_colorChanging(value);
					this.SendPropertyChanging();
					this._Route_color = value;
					this.SendPropertyChanged("Route_color");
					this.OnRoute_colorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="route_text_color", Storage="_Route_text_color", DbType="NVarChar(100)")]
		public string Route_text_color
		{
			get
			{
				return this._Route_text_color;
			}
			set
			{
				if ((this._Route_text_color != value))
				{
					this.OnRoute_text_colorChanging(value);
					this.SendPropertyChanging();
					this._Route_text_color = value;
					this.SendPropertyChanged("Route_text_color");
					this.OnRoute_text_colorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="agency_pk", Storage="_Agency", ThisKey="Agency_id", OtherKey="Agency_id", IsForeignKey=true)]
		public Agency Agency
		{
			get
			{
				return this._Agency.Entity;
			}
			set
			{
				Agency previousValue = this._Agency.Entity;
				if (((previousValue != value) 
							|| (this._Agency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agency.Entity = null;
						previousValue.Routes.Remove(this);
					}
					this._Agency.Entity = value;
					if ((value != null))
					{
						value.Routes.Add(this);
						this._Agency_id = value.Agency_id;
					}
					else
					{
						this._Agency_id = default(string);
					}
					this.SendPropertyChanged("Agency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="route_fk", Storage="_Trips", ThisKey="Route_id", OtherKey="Route_id", DeleteRule="NO ACTION")]
		public EntitySet<Trip> Trips
		{
			get
			{
				return this._Trips;
			}
			set
			{
				this._Trips.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trips(Trip entity)
		{
			this.SendPropertyChanging();
			entity.Route = this;
		}
		
		private void detach_Trips(Trip entity)
		{
			this.SendPropertyChanging();
			entity.Route = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="stop_times")]
	public partial class Stop_time : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Trip_id;
		
		private string _Arrival_time;
		
		private string _Departure_time;
		
		private string _Stop_id;
		
		private int _Stop_sequence;
		
		private string _Stop_headsign;
		
		private System.Nullable<int> _Pickup_type;
		
		private System.Nullable<int> _Drop_off_type;
		
		private string _Shape_dist_traveled;
		
		private EntityRef<Stop> _Stop;
		
		private EntityRef<Trip> _Trip;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrip_idChanging(int value);
    partial void OnTrip_idChanged();
    partial void OnArrival_timeChanging(string value);
    partial void OnArrival_timeChanged();
    partial void OnDeparture_timeChanging(string value);
    partial void OnDeparture_timeChanged();
    partial void OnStop_idChanging(string value);
    partial void OnStop_idChanged();
    partial void OnStop_sequenceChanging(int value);
    partial void OnStop_sequenceChanged();
    partial void OnStop_headsignChanging(string value);
    partial void OnStop_headsignChanged();
    partial void OnPickup_typeChanging(System.Nullable<int> value);
    partial void OnPickup_typeChanged();
    partial void OnDrop_off_typeChanging(System.Nullable<int> value);
    partial void OnDrop_off_typeChanged();
    partial void OnShape_dist_traveledChanging(string value);
    partial void OnShape_dist_traveledChanged();
    #endregion
		
		public Stop_time()
		{
			this._Stop = default(EntityRef<Stop>);
			this._Trip = default(EntityRef<Trip>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="trip_id", Storage="_Trip_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Trip_id
		{
			get
			{
				return this._Trip_id;
			}
			set
			{
				if ((this._Trip_id != value))
				{
					this.OnTrip_idChanging(value);
					this.SendPropertyChanging();
					this._Trip_id = value;
					this.SendPropertyChanged("Trip_id");
					this.OnTrip_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="arrival_time", Storage="_Arrival_time", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Arrival_time
		{
			get
			{
				return this._Arrival_time;
			}
			set
			{
				if ((this._Arrival_time != value))
				{
					this.OnArrival_timeChanging(value);
					this.SendPropertyChanging();
					this._Arrival_time = value;
					this.SendPropertyChanged("Arrival_time");
					this.OnArrival_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="departure_time", Storage="_Departure_time", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Departure_time
		{
			get
			{
				return this._Departure_time;
			}
			set
			{
				if ((this._Departure_time != value))
				{
					this.OnDeparture_timeChanging(value);
					this.SendPropertyChanging();
					this._Departure_time = value;
					this.SendPropertyChanged("Departure_time");
					this.OnDeparture_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stop_id", Storage="_Stop_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Stop_id
		{
			get
			{
				return this._Stop_id;
			}
			set
			{
				if ((this._Stop_id != value))
				{
					this.OnStop_idChanging(value);
					this.SendPropertyChanging();
					this._Stop_id = value;
					this.SendPropertyChanged("Stop_id");
					this.OnStop_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stop_sequence", Storage="_Stop_sequence", DbType="Int NOT NULL")]
		public int Stop_sequence
		{
			get
			{
				return this._Stop_sequence;
			}
			set
			{
				if ((this._Stop_sequence != value))
				{
					this.OnStop_sequenceChanging(value);
					this.SendPropertyChanging();
					this._Stop_sequence = value;
					this.SendPropertyChanged("Stop_sequence");
					this.OnStop_sequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stop_headsign", Storage="_Stop_headsign", DbType="NVarChar(100)")]
		public string Stop_headsign
		{
			get
			{
				return this._Stop_headsign;
			}
			set
			{
				if ((this._Stop_headsign != value))
				{
					this.OnStop_headsignChanging(value);
					this.SendPropertyChanging();
					this._Stop_headsign = value;
					this.SendPropertyChanged("Stop_headsign");
					this.OnStop_headsignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pickup_type", Storage="_Pickup_type", DbType="Int")]
		public System.Nullable<int> Pickup_type
		{
			get
			{
				return this._Pickup_type;
			}
			set
			{
				if ((this._Pickup_type != value))
				{
					this.OnPickup_typeChanging(value);
					this.SendPropertyChanging();
					this._Pickup_type = value;
					this.SendPropertyChanged("Pickup_type");
					this.OnPickup_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="drop_off_type", Storage="_Drop_off_type", DbType="Int")]
		public System.Nullable<int> Drop_off_type
		{
			get
			{
				return this._Drop_off_type;
			}
			set
			{
				if ((this._Drop_off_type != value))
				{
					this.OnDrop_off_typeChanging(value);
					this.SendPropertyChanging();
					this._Drop_off_type = value;
					this.SendPropertyChanged("Drop_off_type");
					this.OnDrop_off_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="shape_dist_traveled", Storage="_Shape_dist_traveled", DbType="NVarChar(100)")]
		public string Shape_dist_traveled
		{
			get
			{
				return this._Shape_dist_traveled;
			}
			set
			{
				if ((this._Shape_dist_traveled != value))
				{
					this.OnShape_dist_traveledChanging(value);
					this.SendPropertyChanging();
					this._Shape_dist_traveled = value;
					this.SendPropertyChanged("Shape_dist_traveled");
					this.OnShape_dist_traveledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stop_id_pk", Storage="_Stop", ThisKey="Stop_id", OtherKey="Stop_id", IsForeignKey=true)]
		public Stop Stop
		{
			get
			{
				return this._Stop.Entity;
			}
			set
			{
				Stop previousValue = this._Stop.Entity;
				if (((previousValue != value) 
							|| (this._Stop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stop.Entity = null;
						previousValue.Stop_times.Remove(this);
					}
					this._Stop.Entity = value;
					if ((value != null))
					{
						value.Stop_times.Add(this);
						this._Stop_id = value.Stop_id;
					}
					else
					{
						this._Stop_id = default(string);
					}
					this.SendPropertyChanged("Stop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trip_id_fk", Storage="_Trip", ThisKey="Trip_id", OtherKey="Trip_id", IsForeignKey=true)]
		public Trip Trip
		{
			get
			{
				return this._Trip.Entity;
			}
			set
			{
				Trip previousValue = this._Trip.Entity;
				if (((previousValue != value) 
							|| (this._Trip.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trip.Entity = null;
						previousValue.Stop_times.Remove(this);
					}
					this._Trip.Entity = value;
					if ((value != null))
					{
						value.Stop_times.Add(this);
						this._Trip_id = value.Trip_id;
					}
					else
					{
						this._Trip_id = default(int);
					}
					this.SendPropertyChanged("Trip");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="stops")]
	public partial class Stop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Stop_id;
		
		private string _Stop_code;
		
		private string _Stop_name;
		
		private string _Stop_desc;
		
		private float _Stop_lat;
		
		private float _Stop_lon;
		
		private string _Zone_id;
		
		private string _Stop_url;
		
		private System.Nullable<bool> _Location_type;
		
		private System.Nullable<bool> _Parent_station;
		
		private string _Stop_timezone;
		
		private EntitySet<Stop_time> _Stop_times;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStop_idChanging(string value);
    partial void OnStop_idChanged();
    partial void OnStop_codeChanging(string value);
    partial void OnStop_codeChanged();
    partial void OnStop_nameChanging(string value);
    partial void OnStop_nameChanged();
    partial void OnStop_descChanging(string value);
    partial void OnStop_descChanged();
    partial void OnStop_latChanging(float value);
    partial void OnStop_latChanged();
    partial void OnStop_lonChanging(float value);
    partial void OnStop_lonChanged();
    partial void OnZone_idChanging(string value);
    partial void OnZone_idChanged();
    partial void OnStop_urlChanging(string value);
    partial void OnStop_urlChanged();
    partial void OnLocation_typeChanging(System.Nullable<bool> value);
    partial void OnLocation_typeChanged();
    partial void OnParent_stationChanging(System.Nullable<bool> value);
    partial void OnParent_stationChanged();
    partial void OnStop_timezoneChanging(string value);
    partial void OnStop_timezoneChanged();
    #endregion
		
		public Stop()
		{
			this._Stop_times = new EntitySet<Stop_time>(new Action<Stop_time>(this.attach_Stop_times), new Action<Stop_time>(this.detach_Stop_times));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stop_id", Storage="_Stop_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Stop_id
		{
			get
			{
				return this._Stop_id;
			}
			set
			{
				if ((this._Stop_id != value))
				{
					this.OnStop_idChanging(value);
					this.SendPropertyChanging();
					this._Stop_id = value;
					this.SendPropertyChanged("Stop_id");
					this.OnStop_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stop_code", Storage="_Stop_code", DbType="NVarChar(100)")]
		public string Stop_code
		{
			get
			{
				return this._Stop_code;
			}
			set
			{
				if ((this._Stop_code != value))
				{
					this.OnStop_codeChanging(value);
					this.SendPropertyChanging();
					this._Stop_code = value;
					this.SendPropertyChanged("Stop_code");
					this.OnStop_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stop_name", Storage="_Stop_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Stop_name
		{
			get
			{
				return this._Stop_name;
			}
			set
			{
				if ((this._Stop_name != value))
				{
					this.OnStop_nameChanging(value);
					this.SendPropertyChanging();
					this._Stop_name = value;
					this.SendPropertyChanged("Stop_name");
					this.OnStop_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stop_desc", Storage="_Stop_desc", DbType="NVarChar(100)")]
		public string Stop_desc
		{
			get
			{
				return this._Stop_desc;
			}
			set
			{
				if ((this._Stop_desc != value))
				{
					this.OnStop_descChanging(value);
					this.SendPropertyChanging();
					this._Stop_desc = value;
					this.SendPropertyChanged("Stop_desc");
					this.OnStop_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stop_lat", Storage="_Stop_lat", DbType="Real NOT NULL")]
		public float Stop_lat
		{
			get
			{
				return this._Stop_lat;
			}
			set
			{
				if ((this._Stop_lat != value))
				{
					this.OnStop_latChanging(value);
					this.SendPropertyChanging();
					this._Stop_lat = value;
					this.SendPropertyChanged("Stop_lat");
					this.OnStop_latChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stop_lon", Storage="_Stop_lon", DbType="Real NOT NULL")]
		public float Stop_lon
		{
			get
			{
				return this._Stop_lon;
			}
			set
			{
				if ((this._Stop_lon != value))
				{
					this.OnStop_lonChanging(value);
					this.SendPropertyChanging();
					this._Stop_lon = value;
					this.SendPropertyChanged("Stop_lon");
					this.OnStop_lonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="zone_id", Storage="_Zone_id", DbType="NVarChar(100)")]
		public string Zone_id
		{
			get
			{
				return this._Zone_id;
			}
			set
			{
				if ((this._Zone_id != value))
				{
					this.OnZone_idChanging(value);
					this.SendPropertyChanging();
					this._Zone_id = value;
					this.SendPropertyChanged("Zone_id");
					this.OnZone_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stop_url", Storage="_Stop_url", DbType="NVarChar(100)")]
		public string Stop_url
		{
			get
			{
				return this._Stop_url;
			}
			set
			{
				if ((this._Stop_url != value))
				{
					this.OnStop_urlChanging(value);
					this.SendPropertyChanging();
					this._Stop_url = value;
					this.SendPropertyChanged("Stop_url");
					this.OnStop_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="location_type", Storage="_Location_type", DbType="Bit")]
		public System.Nullable<bool> Location_type
		{
			get
			{
				return this._Location_type;
			}
			set
			{
				if ((this._Location_type != value))
				{
					this.OnLocation_typeChanging(value);
					this.SendPropertyChanging();
					this._Location_type = value;
					this.SendPropertyChanged("Location_type");
					this.OnLocation_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="parent_station", Storage="_Parent_station", DbType="Bit")]
		public System.Nullable<bool> Parent_station
		{
			get
			{
				return this._Parent_station;
			}
			set
			{
				if ((this._Parent_station != value))
				{
					this.OnParent_stationChanging(value);
					this.SendPropertyChanging();
					this._Parent_station = value;
					this.SendPropertyChanged("Parent_station");
					this.OnParent_stationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stop_timezone", Storage="_Stop_timezone", DbType="NVarChar(100)")]
		public string Stop_timezone
		{
			get
			{
				return this._Stop_timezone;
			}
			set
			{
				if ((this._Stop_timezone != value))
				{
					this.OnStop_timezoneChanging(value);
					this.SendPropertyChanging();
					this._Stop_timezone = value;
					this.SendPropertyChanged("Stop_timezone");
					this.OnStop_timezoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stop_id_pk", Storage="_Stop_times", ThisKey="Stop_id", OtherKey="Stop_id", DeleteRule="NO ACTION")]
		public EntitySet<Stop_time> Stop_times
		{
			get
			{
				return this._Stop_times;
			}
			set
			{
				this._Stop_times.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stop_times(Stop_time entity)
		{
			this.SendPropertyChanging();
			entity.Stop = this;
		}
		
		private void detach_Stop_times(Stop_time entity)
		{
			this.SendPropertyChanging();
			entity.Stop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="trips")]
	public partial class Trip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Route_id;
		
		private string _Service_id;
		
		private int _Trip_id;
		
		private string _Trip_headsign;
		
		private string _Trip_short_name;
		
		private System.Nullable<bool> _Direction_id;
		
		private System.Nullable<int> _Block_id;
		
		private string _Shape_id;
		
		private EntityRef<Route> _Route;
		
		private EntityRef<Calendar> _Calendar;
		
		private EntitySet<Stop_time> _Stop_times;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoute_idChanging(string value);
    partial void OnRoute_idChanged();
    partial void OnService_idChanging(string value);
    partial void OnService_idChanged();
    partial void OnTrip_idChanging(int value);
    partial void OnTrip_idChanged();
    partial void OnTrip_headsignChanging(string value);
    partial void OnTrip_headsignChanged();
    partial void OnTrip_short_nameChanging(string value);
    partial void OnTrip_short_nameChanged();
    partial void OnDirection_idChanging(System.Nullable<bool> value);
    partial void OnDirection_idChanged();
    partial void OnBlock_idChanging(System.Nullable<int> value);
    partial void OnBlock_idChanged();
    partial void OnShape_idChanging(string value);
    partial void OnShape_idChanged();
    #endregion
		
		public Trip()
		{
			this._Route = default(EntityRef<Route>);
			this._Calendar = default(EntityRef<Calendar>);
			this._Stop_times = new EntitySet<Stop_time>(new Action<Stop_time>(this.attach_Stop_times), new Action<Stop_time>(this.detach_Stop_times));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="route_id", Storage="_Route_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Route_id
		{
			get
			{
				return this._Route_id;
			}
			set
			{
				if ((this._Route_id != value))
				{
					this.OnRoute_idChanging(value);
					this.SendPropertyChanging();
					this._Route_id = value;
					this.SendPropertyChanged("Route_id");
					this.OnRoute_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="service_id", Storage="_Service_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Service_id
		{
			get
			{
				return this._Service_id;
			}
			set
			{
				if ((this._Service_id != value))
				{
					this.OnService_idChanging(value);
					this.SendPropertyChanging();
					this._Service_id = value;
					this.SendPropertyChanged("Service_id");
					this.OnService_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="trip_id", Storage="_Trip_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Trip_id
		{
			get
			{
				return this._Trip_id;
			}
			set
			{
				if ((this._Trip_id != value))
				{
					this.OnTrip_idChanging(value);
					this.SendPropertyChanging();
					this._Trip_id = value;
					this.SendPropertyChanged("Trip_id");
					this.OnTrip_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="trip_headsign", Storage="_Trip_headsign", DbType="NVarChar(100)")]
		public string Trip_headsign
		{
			get
			{
				return this._Trip_headsign;
			}
			set
			{
				if ((this._Trip_headsign != value))
				{
					this.OnTrip_headsignChanging(value);
					this.SendPropertyChanging();
					this._Trip_headsign = value;
					this.SendPropertyChanged("Trip_headsign");
					this.OnTrip_headsignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="trip_short_name", Storage="_Trip_short_name", DbType="NVarChar(100)")]
		public string Trip_short_name
		{
			get
			{
				return this._Trip_short_name;
			}
			set
			{
				if ((this._Trip_short_name != value))
				{
					this.OnTrip_short_nameChanging(value);
					this.SendPropertyChanging();
					this._Trip_short_name = value;
					this.SendPropertyChanged("Trip_short_name");
					this.OnTrip_short_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="direction_id", Storage="_Direction_id", DbType="Bit")]
		public System.Nullable<bool> Direction_id
		{
			get
			{
				return this._Direction_id;
			}
			set
			{
				if ((this._Direction_id != value))
				{
					this.OnDirection_idChanging(value);
					this.SendPropertyChanging();
					this._Direction_id = value;
					this.SendPropertyChanged("Direction_id");
					this.OnDirection_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="block_id", Storage="_Block_id", DbType="Int")]
		public System.Nullable<int> Block_id
		{
			get
			{
				return this._Block_id;
			}
			set
			{
				if ((this._Block_id != value))
				{
					this.OnBlock_idChanging(value);
					this.SendPropertyChanging();
					this._Block_id = value;
					this.SendPropertyChanged("Block_id");
					this.OnBlock_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="shape_id", Storage="_Shape_id", DbType="NVarChar(100)")]
		public string Shape_id
		{
			get
			{
				return this._Shape_id;
			}
			set
			{
				if ((this._Shape_id != value))
				{
					this.OnShape_idChanging(value);
					this.SendPropertyChanging();
					this._Shape_id = value;
					this.SendPropertyChanged("Shape_id");
					this.OnShape_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="route_fk", Storage="_Route", ThisKey="Route_id", OtherKey="Route_id", IsForeignKey=true)]
		public Route Route
		{
			get
			{
				return this._Route.Entity;
			}
			set
			{
				Route previousValue = this._Route.Entity;
				if (((previousValue != value) 
							|| (this._Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Route.Entity = null;
						previousValue.Trips.Remove(this);
					}
					this._Route.Entity = value;
					if ((value != null))
					{
						value.Trips.Add(this);
						this._Route_id = value.Route_id;
					}
					else
					{
						this._Route_id = default(string);
					}
					this.SendPropertyChanged("Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_id_pk", Storage="_Calendar", ThisKey="Service_id", OtherKey="Service_id", IsForeignKey=true)]
		public Calendar Calendar
		{
			get
			{
				return this._Calendar.Entity;
			}
			set
			{
				Calendar previousValue = this._Calendar.Entity;
				if (((previousValue != value) 
							|| (this._Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Calendar.Entity = null;
						previousValue.Trips.Remove(this);
					}
					this._Calendar.Entity = value;
					if ((value != null))
					{
						value.Trips.Add(this);
						this._Service_id = value.Service_id;
					}
					else
					{
						this._Service_id = default(string);
					}
					this.SendPropertyChanged("Calendar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trip_id_fk", Storage="_Stop_times", ThisKey="Trip_id", OtherKey="Trip_id", DeleteRule="NO ACTION")]
		public EntitySet<Stop_time> Stop_times
		{
			get
			{
				return this._Stop_times;
			}
			set
			{
				this._Stop_times.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stop_times(Stop_time entity)
		{
			this.SendPropertyChanging();
			entity.Trip = this;
		}
		
		private void detach_Stop_times(Stop_time entity)
		{
			this.SendPropertyChanging();
			entity.Trip = null;
		}
	}
}
#pragma warning restore 1591
